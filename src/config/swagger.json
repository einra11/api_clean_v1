
{
    "swagger": "2.0",
        "title" : "API_CLEAN_V1",
        "description" : "BFI Training DEMO APP",
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
          },
          "version": "1.0.0",
          "host": "localhost:4032",
          "basePath": "/api",
          "tags": [
            {
              "name": "Books API",
              "description": "Api for books, with access rights."
            }
          ],
          "schemes": ["http"],
          "consumes": ["application/json"],
          "produces": ["application/json"],
          "paths" :{
            "/users" : {
                "post":{
                    "tags": ["Users"],
                    "summary": "API Endpoint to login user",
                    "description" : "Login User",
                    "parameters":[
                      {
                        "name": "users",
                        "description": "Accounts params to login",
                        "in": "body",
                        "required": "true",
                        "schema" : {
                          "$ref" : "#definitions/UserLogin"
                        }
                      }
                    ],
                    "produces" : ["application/json"],
                    "responses":{
                      "200":{
                        "description" : "Succesfully logged in!",
                        "schema": {
                         "$ref" : "#definitions/UserLoginResponse"
                        }
                      }
                    }
                  }
            },
            "/users/register" : {
                "post":{
                    "tags": ["Users"],
                    "summary": "API Endpoint to register new user",
                    "description" : "Register new User",
                    "parameters":[
                      {
                        "name": "users",
                        "description": "Accounts params to register new accounts",
                        "in": "body",
                        "required": "true",
                        "schema" : {
                          "$ref" : "#definitions/User"
                        }
                      }
                    ],
                    "produces" : ["application/json"],
                    "responses":{
                      "200":{
                        "description" : "New user created",
                        "schema": {
                         "$ref" : "#definitions/UserSignUp"
                        }
                      }
                    }
                  }
            },

            "/users/{id}" : {
              "parameters" : [
                  {
                     "name" : "id",
                     "in" : "path",
                     "required" : "true",
                     "description" : "Unique id a user",
                     "type" : "string"
                  },
                  {
                     "name": "authorization",
                     "description": "Access token to authorized users",
                     "in": "header",
                     "type": "string",
                     "required": "true"
                   }
              ],
              "patch":{
                "tags": ["Users"],
                "summary": "API Endpoint to Soft Delete users",
                "description" : "Soft Delete users in database",

                "produces" : ["application/json"],
                "responses":{
                  "200":{
                    "description" : "User soft deleted"
                  }
                }
            }
            },
            "/books" : {
             "post":{
               "tags": ["Books"],
               "summary": "API Endpoint to register new book",
               "description" : "Create encode new book in database",
               "parameters":[
                 {
                   "name": "Book",
                   "description": "New book parameters",
                   "in": "body",
                   "required": "true",
                   "schema" : {
                     "$ref" : "#definitions/Book"
                   }
                 },
                 {
                    "name": "authorization",
                    "description": "Access token to authorized users",
                    "in": "header",
                    "type": "string",
                    "required": "true"
                  }
               ],
               "produces" : ["application/json"],
               "responses":{
                 "200":{
                   "description" : "New book created",
                   "schema": {
                    "$ref" : "#definitions/Book"
                   }
                 }
               }
             },
             "get":{
                "tags": ["Books"],
                "summary": "API Endpoint to get all books",
                "description" : "To get all books in database",
                "parameters" : [
                  {
                    "name": "authorization",
                    "description": "Access token to authorized users",
                    "in": "header",
                    "type": "string",
                    "required": "true"
                  }
                ],
                "produces" : ["application/json"],
                "responses":{
                  "200":{
                    "description" : "Data loaded"
                  }
                }
              }
             },
             "/books/{id}" : {
                 "parameters" : [
                     {
                        "name" : "id",
                        "in" : "path",
                        "required" : "true",
                        "description" : "Unique id of book",
                        "type" : "string"
                     },
                     {
                        "name": "authorization",
                        "description": "Access token to authorized users",
                        "in": "header",
                        "type": "string",
                        "required": "true"
                      }
                 ],
  
                "delete":{
                    "tags": ["Books"],
                    "summary": "API Endpoint to DELETE single book",
                    "description" : "To DELETE single book in database",
                    "produces" : ["application/json"],
                    "responses":{
                      "200":{
                        "description" : "Data DELETED",
                        "schema": {
                         "$ref" : "#definitions/Book"
                        }
                      }
                    }
                } ,
                "patch":{
                    "tags": ["Books"],
                    "summary": "API Endpoint to update book",
                    "description" : "update book in database",
                    "parameters":[
                      {
                        "name": "book",
                        "description": "Book params to update book",
                        "in": "body",
                        "schema" : {
                          "$ref" : "#definitions/UpdateBook"
                        }
                      }
                    ],
                    "produces" : ["application/json"],
                    "responses":{
                      "200":{
                        "description" : "book updated",
                        "schema": {
                         "$ref" : "#definitions/UpdateBook"
                        }
                      }
                    }
                }   

             }
            },
          "definitions":{
            "Book":{
              "required": ["title","author"],
              "properties":{
                "title": {
                  "type" : "string"
                },
                "author": {
                  "type" : "string"
                },
                "ratings": {
                  "type" : "string"
                },
                "serial": {
                    "type" : "string"
                  }
              }
            },
            "UpdateBook":{
                "properties":{

                  "title": {
                    "type" : "string"
                  },
                  "author": {
                    "type" : "string"
                  },
                  "ratings": {
                    "type" : "string"
                  },
                  "serial": {
                      "type" : "string"
                  }

                }
              },
            "UserSignUp" : {
                "properties":{
                    "success": {
                      "type":"boolean"
                  }
                 }
            },
            "User":{
                "required": ["email","password"],

                "properties":{
                  "email": {
                    "type" : "string",
                    "format" :"email"
                  },
                  "password": {
                      "type" : "string"
                    },
                  "role" : {
                      "type" : "string"
                  },
                  "status" : {
                    "type" : "string"
                  }
                }
              },
              "UserLogin":{
                "required": ["email","password"],
                "properties":{
                  "email": {
                    "type" : "string",
                    "format" :"email"
                  },
                  "password": {
                      "type" : "string"
                    }
                }
              },
              "UserLoginResponse":{
                "properties":{
                  "token": {
                      "type" : "string"
                    }
                }
              }
          }
    
}