{
  "stats": {
    "duration": 6663,
    "start": "2022-02-08T01:30:01.745Z",
    "end": "2022-02-08T01:30:08.408Z",
    "passes": 23,
    "failures": 2,
    "tests": 25
  },
  "failures": [
    {
      "title": "will delete specific book",
      "fullTitle": "DELETE Book will delete specific book",
      "duration": 2384,
      "errorCount": 1,
      "error": "Error: ID not found\n    at _callee$ (C:\\Users\\BFI\\Documents\\dev\\bfi_training\\api_clean_v1\\src\\use-cases\\book\\remove-book.js:14:15)\n    at tryCatch (C:\\Users\\BFI\\Documents\\dev\\bfi_training\\api_clean_v1\\node_modules\\regenerator-runtime\\runtime.js:62:40)\n    at Generator.invoke [as _invoke] (C:\\Users\\BFI\\Documents\\dev\\bfi_training\\api_clean_v1\\node_modules\\regenerator-runtime\\runtime.js:296:22)\n    at Generator.prototype.<computed> [as next] (C:\\Users\\BFI\\Documents\\dev\\bfi_training\\api_clean_v1\\node_modules\\regenerator-runtime\\runtime.js:114:21)\n    at step (C:\\Users\\BFI\\Documents\\dev\\bfi_training\\api_clean_v1\\src\\use-cases\\book\\remove-book.js:7:191)\n    at C:\\Users\\BFI\\Documents\\dev\\bfi_training\\api_clean_v1\\src\\use-cases\\book\\remove-book.js:7:361\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)"
    },
    {
      "title": "DELETE has id paramater provided",
      "fullTitle": "DELETE /api/books/:id Enpoint Code,DELETE Code 200/Success DELETE has id paramater provided",
      "duration": 4936,
      "errorCount": 1,
      "error": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).toBe(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m400\u001b[39m\n    at _callee10$ (C:\\Users\\BFI\\Documents\\dev\\bfi_training\\api_clean_v1\\src\\test\\integration\\book.test.js:155:41)\n    at tryCatch (C:\\Users\\BFI\\Documents\\dev\\bfi_training\\api_clean_v1\\node_modules\\regenerator-runtime\\runtime.js:62:40)\n    at Generator.invoke [as _invoke] (C:\\Users\\BFI\\Documents\\dev\\bfi_training\\api_clean_v1\\node_modules\\regenerator-runtime\\runtime.js:296:22)\n    at Generator.prototype.<computed> [as next] (C:\\Users\\BFI\\Documents\\dev\\bfi_training\\api_clean_v1\\node_modules\\regenerator-runtime\\runtime.js:114:21)\n    at step (C:\\Users\\BFI\\Documents\\dev\\bfi_training\\api_clean_v1\\src\\test\\integration\\book.test.js:11:191)\n    at C:\\Users\\BFI\\Documents\\dev\\bfi_training\\api_clean_v1\\src\\test\\integration\\book.test.js:11:361\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)"
    }
  ],
  "passes": [
    {
      "title": "will display all the book",
      "fullTitle": "GET all books will display all the book",
      "duration": 2384,
      "errorCount": 0
    },
    {
      "title": "will create book",
      "fullTitle": "POST create book will create book",
      "duration": 2384,
      "errorCount": 0
    },
    {
      "title": "will update book",
      "fullTitle": "PATCH book will update book",
      "duration": 2384,
      "errorCount": 0
    },
    {
      "title": "will return token ",
      "fullTitle": "Login user will return token ",
      "duration": 2532,
      "errorCount": 0
    },
    {
      "title": "will create new account and return message with no errors",
      "fullTitle": "Register user will create new account and return message with no errors",
      "duration": 2532,
      "errorCount": 0
    },
    {
      "title": "will soft delete account and return message with no errors",
      "fullTitle": "Soft Delete user will soft delete account and return message with no errors",
      "duration": 2532,
      "errorCount": 0
    },
    {
      "title": "should return email and token and a status 200",
      "fullTitle": "GET/LOGIN /api/users endpoint,Given data : email, password should return email and token and a status 200",
      "duration": 3494,
      "errorCount": 0
    },
    {
      "title": "should return please enter email",
      "fullTitle": "GET/LOGIN /api/users endpoint,Given data : password,  should return please enter email",
      "duration": 3494,
      "errorCount": 0
    },
    {
      "title": "should return please enter password",
      "fullTitle": "GET/LOGIN /api/users endpoint,Given data : email,  should return please enter password",
      "duration": 3494,
      "errorCount": 0
    },
    {
      "title": "should return code 200 with no errors",
      "fullTitle": "POST/REGISTER /api/users endpoint,Given data: email, password, role, status should return code 200 with no errors",
      "duration": 3494,
      "errorCount": 0
    },
    {
      "title": "should return please enter email",
      "fullTitle": "POST/REGISTER /api/users endpoint,Given data: , password, role, status should return please enter email",
      "duration": 3494,
      "errorCount": 0
    },
    {
      "title": "should return please enter password",
      "fullTitle": "POST/REGISTER /api/users endpoint,Given data: email, , role, status should return please enter password",
      "duration": 3494,
      "errorCount": 0
    },
    {
      "title": "should return default value of status  pending",
      "fullTitle": "POST/REGISTER /api/users endpoint,Given data: email, password, role,  should return default value of status  pending",
      "duration": 3494,
      "errorCount": 0
    },
    {
      "title": "should response with no error and a status code of 200",
      "fullTitle": "PATCH/SOFT DELETE /api/users/:id endpoint should response with no error and a status code of 200",
      "duration": 3494,
      "errorCount": 0
    },
    {
      "title": "Should respond a status 200 code & success",
      "fullTitle": "POST /api/books Endpoint,POST Given data : title, author, ratings, serial Should respond a status 200 code & success",
      "duration": 4936,
      "errorCount": 0
    },
    {
      "title": "must have a title!",
      "fullTitle": "POST /api/books Endpoint,Given data: , author , rating, serial must have a title!",
      "duration": 4936,
      "errorCount": 0
    },
    {
      "title": "must have a Author!",
      "fullTitle": "POST /api/books Endpoint,Given data: title, , rating, serial must have a Author!",
      "duration": 4936,
      "errorCount": 0
    },
    {
      "title": "must give 0 default value of 0 for rating if not indicated",
      "fullTitle": "POST /api/books Endpoint,Given data : title, author, , serial must give 0 default value of 0 for rating if not indicated",
      "duration": 4936,
      "errorCount": 0
    },
    {
      "title": "must have a serial",
      "fullTitle": "POST /api/books Endpoint,Given data : title, author, ratings must have a serial",
      "duration": 4936,
      "errorCount": 0
    },
    {
      "title": "Should respond a status 200 code & success",
      "fullTitle": "GET /api/books Endpoint Should respond a status 200 code & success",
      "duration": 4936,
      "errorCount": 0
    },
    {
      "title": "Should respond a status 200 code & success",
      "fullTitle": "PATCH /api/books/:id Endpoint,PATCH Given data : title, author, ratings, serial Should respond a status 200 code & success",
      "duration": 4936,
      "errorCount": 0
    },
    {
      "title": "Should respond a status 400 Route not found",
      "fullTitle": "PATCH /api/books/:id Endpoint,PATCH Given data : title, author, ratings, serial but wrong ID Should respond a status 400 Route not found",
      "duration": 4936,
      "errorCount": 0
    },
    {
      "title": "DELETE has id paramater provided",
      "fullTitle": "DELETE /api/books/:id Enpoint Code,DELETE Code 400/Not Found or Id not found DELETE has id paramater provided",
      "duration": 4936,
      "errorCount": 0
    }
  ],
  "skipped": []
}